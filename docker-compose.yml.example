version: "3.9"

volumes:
  pokequest_data:

services:
  ###################################
  # DATABASE: The POSTGRES DB
  ###################################
  postgres:
    build:
      context: ./database
      dockerfile: DOCKERFILE
    image: <docker_id>/postgres:pokequest
    restart: always
    environment: 
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
    ports:
      - "5432:5432"
    volumes:
      - pokequest_data:/var/lib/postgresql/data
      - ./database/database.sql:/docker-entrypoint-initdb.d/database.sql

  ###################################
  # RABBIT_MQ
  ###################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq-pokequest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - pokequest_data:/var/lib/rabbitmq

  ###################################
  # NOTIFICATION
  ###################################
  notification:
    build:
      context: ./notification
      dockerfile: DOCKERFILE
    image: <docker_id>/notification:pokequest
    depends_on:
      - rabbitmq
      - web
    restart: always
    environment:
      - "CONSUMER_KEY=<INSERT_KEY>"
      - "CONSUMER_SECRET=<INSERT_KEY>"
      - "ACCESS_TOKEN=<INSERT_KEY>"
      - "ACCESS_TOKEN_SECRET=<INSERT_KEY>"
      - "RABBIT_MQ_PORT=5672"
      - "HOSTNAME=rabbitmq"

  ###################################
  # SERVICE: pokemon
  ###################################
  pokemon:
    build:
      context: ./pokemon
      dockerfile: DOCKERFILE
    image: <docker_id>/pokemon:pokequest
    restart: always
    ports:
      - "8000:8000"

  ###################################
  # SERVICE: mission
  ###################################
  mission:
    build:
      context: ./mission
      dockerfile: DOCKERFILE
    image: <docker_id>/mission:pokequest
    restart: always
    environment:
      - "DATABASE_USER=postgres"
      - "DATABASE_HOST=postgres"
      - "DATABASE_NAME=postgres"
      - "DATABASE_PASSWORD=postgres"
      - "DATABASE_PORT=5432"
    ports:
      - "8001:8001"

  ###################################
  # SERVICE: mission_pokemon
  ###################################
  mission_pokemon:
    build:
      context: ./mission_pokemon
      dockerfile: DOCKERFILE
    image: <docker_id>/mission_pokemon:pokequest
    restart: always
    environment:
      - 'DATABASE_USER=postgres'
      - "DATABASE_HOST=postgres"
      - 'DATABASE_NAME=postgres'
      - 'DATABASE_PASSWORD=postgres'
      - 'DATABASE_PORT=5432'
    ports:
      - "8002:8002"

  ###################################
  # SERVICE: trainer_mission
  ###################################
  trainer_mission:
    build:
      context: ./trainer_mission
      dockerfile: DOCKERFILE
    image: <docker_id>/trainer_mission:pokequest
    restart: always
    environment:
      - "DATABASE_USER=postgres"
      - "DATABASE_HOST=postgres"
      - "DATABASE_NAME=postgres"
      - "DATABASE_PASSWORD=postgres"
      - "DATABASE_PORT=5432"
    ports:
      - "8003:8003"

  ###################################
  # SERVICE: trainer_pokemon
  ###################################
  trainer_pokemon:
    build:
      context: ./trainer_pokemon
      dockerfile: DOCKERFILE
    image: <docker_id>/trainer_pokemon:pokequest
    restart: always
    environment:
      - "DATABASE_USER=postgres"
      - "DATABASE_HOST=postgres"
      - "DATABASE_NAME=postgres"
      - "DATABASE_PASSWORD=postgres"
      - "DATABASE_PORT=5432"
    ports:
      - "8004:8004"

  ###################################
  # SERVICE: trainer_mission_pokemon
  ###################################
  trainer_mission_pokemon:
    build:
      context: ./trainer_mission_pokemon
      dockerfile: DOCKERFILE
    image: <docker_id>/trainer_mission_pokemon:pokequest
    restart: always
    environment:
      - "DATABASE_USER=postgres"
      - "DATABASE_HOST=postgres"
      - "DATABASE_NAME=postgres"
      - "DATABASE_PASSWORD=postgres"
      - "DATABASE_PORT=5432"
    ports:
      - "8005:8005"

  ###################################
  # SERVICE: complex_mission_management_admin
  ###################################
  complex_mission_management_admin:
    build:
      context: ./complex_mission_management_admin
      dockerfile: DOCKERFILE
    image: <docker_id>/complex_mission_management_admin:pokequest
    restart: always
    depends_on: 
      - pokemon
      - mission
      - mission_pokemon
      - trainer_mission
      - trainer_pokemon
      - trainer_mission_pokemon
    environment:
      - "POKEMON_URL=http://pokemon:8000"
      - "MISSION_URL=http://mission:8001"
      - "MISSION_POKEMON_URL=http://mission_pokemon:8002"
      - "TRAINER_MISSION_URL=http://trainer_mission:8003"
      - "TRAINER_POKEMON_URL=http://trainer_pokemon:8004"
      - "TRAINER_MISSION_POKEMON_URL=http://trainer_mission_pokemon:8005"
      - "RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672"
    ports:
      - "9000:9000"

  ###################################
  # SERVICE: complex_mission_management
  ###################################
  complex_mission_management:
    build:
      context: ./complex_mission_management
      dockerfile: DOCKERFILE
    image: <docker_id>/complex_mission_management:pokequest
    restart: always
    depends_on: 
      - pokemon
      - mission
      - mission_pokemon
      - trainer_mission
      - trainer_pokemon
      - trainer_mission_pokemon
    environment:
      - "POKEMON_URL=http://pokemon:8000"
      - "MISSION_URL=http://mission:8001"
      - "MISSION_POKEMON_URL=http://mission_pokemon:8002"
      - "TRAINER_MISSION_URL=http://trainer_mission:8003"
      - "TRAINER_POKEMON_URL=http://trainer_pokemon:8004"
      - "TRAINER_MISSION_POKEMON_URL=http://trainer_mission_pokemon:8005"
    ports:
      - "9001:9001"
  
  ###################################
  # SERVICE: complex_pokemon_management
  ###################################
  complex_pokemon_management:
    build:
      context: ./complex_pokemon_management
      dockerfile: DOCKERFILE
    image: <docker_id>/complex_pokemon_management:pokequest
    restart: always
    depends_on: 
      - pokemon
      - mission
      - mission_pokemon
      - trainer_mission
      - trainer_pokemon
      - trainer_mission_pokemon
    environment:
      - "POKEMON_URL=http://pokemon:8000"
      - "MISSION_URL=http://mission:8001"
      - "MISSION_POKEMON_URL=http://mission_pokemon:8002"
      - "TRAINER_MISSION_URL=http://trainer_mission:8003"
      - "TRAINER_POKEMON_URL=http://trainer_pokemon:8004"
      - "TRAINER_MISSION_POKEMON_URL=http://trainer_mission_pokemon:8005"
    ports:
      - "9002:9002"

  ###################################
  # WEB: pokequest_web
  ###################################
  web:
    build:
      context: ./pokequest-web
      dockerfile: DOCKERFILE
      args:
        - "GOOGLE_CLIENT_ID=<INSERT_KEY>"
        - "MISSION_MANAGEMENT_ADMIN=http://complex_mission_management_admin:9000"
        - "MISSION_MANAGEMENT=http://complex_mission_management:9001"
        - "POKEMON_MANAGEMENT=http://complex_pokemon_management:9002"
        - "TWIITER_URL=<INSERT_KEY>"
    image: <docker_id>/pokequest_web:pokequest
    restart: always
    depends_on: 
      - complex_mission_management
      - complex_mission_management_admin
      - complex_pokemon_management
    ports:
      - "3000:3000"